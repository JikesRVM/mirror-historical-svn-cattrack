- @content_for_breadcrumbs = draw_breadcrumbs(@report.test_run, 'regression_report')
- @page_title = "Regression Report: #{h(@report.test_run.label)}"
- scm_url = SystemSetting['scm.url']
%h1.page-title= @page_title

%ul.actions
  %li= link_for(@report.test_run, :label => 'Summary', :action => 'show_summary')
  %li= link_for(@report.test_run, :label => 'Statistics Report', :controller => '/results/test_run', :action => 'statistics_report')
  - if @report.test_run.variant == 'perf'
    %li= link_for(@report.test_run, :label => 'Performance Report', :controller => '/results/test_run', :action => 'performance_report')
.clearer

- if @report.missing_tests.size > 0
  = tests_header('missing_tests', pluralize(@report.missing_tests.size, 'Missing Tests'))
  %table#missing_tests.list
    %tr
      %th Build Configuration
      %th Test Configuration
      %th Group
      %th Test
    - @report.missing_tests.each do |t|
      %tr{:class => cycle('odd','even')}
        %td= h(t['build_configuration_name'])
        %td= h(t['test_configuration_name'])
        %td= h(t['group_name'])
        %td
          = h(t['test_case_name'])

- if @report.new_failures.size > 0
  = tests_header('new_failures', pluralize(@report.new_failures.size, 'New Failures'))
  %table#new_failures.list
    %tr
      %th
      %th Build Configuration
      %th Test Configuration
      %th Group
      %th Test
      %th Result
    - @report.new_failures.each do |t|
      %tr{:class => cycle('odd','even')}
        %td
          %ul.actions
            %li= test_link(t)
        %td= h(t['build_configuration_name'])
        %td= h(t['test_configuration_name'])
        %td= h(t['group_name'])
        %td= h(t['test_case_name'])
        %td= h(t['test_case_execution'])

- if @report.new_successes.size > 0
  = tests_header('new_successes', pluralize(@report.new_successes.size, 'New Successes'))
  %table#new_successes.list
    %tr
      %th
      %th Build Configuration
      %th Test Configuration
      %th Group
      %th Test
    - @report.new_successes.each do |t|
      %tr{:class => cycle('odd','even')}
        %td
          %ul.actions
            %li= test_link(t)
        %td= h(t['build_configuration_name'])
        %td= h(t['test_configuration_name'])
        %td= h(t['group_name'])
        %td= h(t['test_case_name'])

- if @report.intermittent_failures.size > 0
  = tests_header('intermittent_failures', pluralize(@report.intermittent_failures.size, 'Intermittent Failures'))
  %table#intermittent_failures.list
    %tr
      %th
      %th Build Configuration
      %th Test Configuration
      %th Group
      %th Test
      %th Result
    - @report.intermittent_failures.each do |t|
      %tr{:class => cycle('odd','even')}
        %td
          %ul.actions
            %li= test_link(t)
        %td= h(t['build_configuration_name'])
        %td= h(t['test_configuration_name'])
        %td= h(t['group_name'])
        %td= h(t['test_case_name'])
        %td= h(t['test_case_execution'])
  %script{ :type => 'text/javascript' }
    = hide_tests_javascript('intermittent_failures');

- if @report.consistent_failures.size > 0
  = tests_header('consistent_failures', pluralize(@report.consistent_failures.size, 'Consistent Failures'))
  %table#consistent_failures.list
    %tr
      %th
      %th Build Configuration
      %th Test Configuration
      %th Group
      %th Test
      %th Result
    - @report.consistent_failures.each do |t|
      %tr{:class => cycle('odd','even')}
        %td
          %ul.actions
            %li= test_link(t)
        %td= h(t['build_configuration_name'])
        %td= h(t['test_configuration_name'])
        %td= h(t['group_name'])
        %td= h(t['test_case_name'])
        %td= h(t['test_case_execution'])
  %script{ :type => 'text/javascript' }
    = hide_tests_javascript('consistent_failures');

- if @report.test_runs.size > 1
  %h2 Revisions Covered By Report
  %p
    = ((@report.test_runs[@report.test_runs.size - 2].revision)..(@report.test_runs[@report.test_runs.size - 1].revision)).collect {|r| revision_link_for_url(scm_url, r)}.join(', ')

%h2 Test Runs Covered By Report
%table.list
  %tr
    %th
    %th Name
    %th Revision
    %th Time
  - @report.test_runs.each do |t|
    %tr{:class => cycle('odd','even')}
      %td
        %ul.actions
          %li= link_for(t, :label => "Show")
      %td= h(t.label)
      %td= revision_link_for_url(scm_url, t.revision)
      %td= t.start_time

- if @report.statistics.size > 0 or @report.test_runs.size > 1
  %h2 Performance Statistics
  %table.report
    %tr
      %th.pivot
      - @report.test_runs.each do |tr|
        %th.column= tr.label
    %tr
      %th.row Success Rate
      - @report.test_runs.each do |tr|
        %td= h("#{tr.successes.size}/#{tr.test_case_executions.size}")
    - @report.statistics.each do |r|
      %tr
        %th.row= h(r['name'])
        - @report.test_runs.each do |tr|
          %td= perf_stat(tr.id, r)

- if @report.bc_by_tr.size > 0
  %h2 Build Configuration By Test Run
  %table.report
    %tr
      %th.pivot
      - @report.test_runs.each do |tr|
        %th.column= tr.label
    - @report.bc_by_tr.each do |r|
      %tr
        %th.row= h(r['build_configuration_name'])
        - @report.test_runs.each do |tr|
          = cell(r["test_run_#{tr.id}"].to_i)

- if @report.tc_by_tr.size > 0
  %h2 Test Case By Test Run
  %table.report
    %tr
      %th.pivot
      - @report.test_runs.each do |tr|
        %th.column= tr.label
    - @report.tc_by_tr.each do |r|
      %tr
        %th.row= h(r['test_case_name'])
        - @report.test_runs.each do |tr|
          = cell(r["test_run_#{tr.id}"].to_i)
