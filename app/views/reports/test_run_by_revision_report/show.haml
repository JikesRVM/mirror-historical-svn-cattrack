- @page_title = "Test Run Report: #{h(@report.test_run.name)}.#{@report.test_run.id}"
- scm_url = SystemSetting['scm.url']
%h1.page-title= @page_title

%table.details
  %tr
    %th Test Run
    %td= link_for(@report.test_run)
  %tr
    %th Build Target
    %td= link_for(@report.test_run.build_target)
  %tr
    %th Revision
    %td= revision_link_for_url(scm_url, @report.test_run.revision)
  %tr
    %th Time
    %td= h(@report.test_run.occurred_at)
  %tr
    %th Success Rate
    %td= @report.test_run.success_rate

- if @report.missing_tests.size > 0
  = tests_header('missing_tests', pluralize(@report.missing_tests.size, 'Missing Tests'))
  %table#missing_tests.list
    %tr
      %th Build Configuration
      %th Test Configuration
      %th Group
      %th Test
    - @report.missing_tests.each do |t|
      %tr
        %td= h(t['build_configuration_name'])
        %td= h(t['test_configuration_name'])
        %td= h(t['group_name'])
        %td
          = h(t['test_case_name'])

- if @report.new_failures.size > 0
  = tests_header('new_failures', pluralize(@report.new_failures.size, 'New Failures'))
  %table#new_failures.list
    %tr
      %th Build Configuration
      %th Test Configuration
      %th Group
      %th Test
      %th Result
      %th Operations
    - @report.new_failures.each do |t|
      %tr
        %td= h(t['build_configuration_name'])
        %td= h(t['test_configuration_name'])
        %td= h(t['group_name'])
        %td= h(t['test_case_name'])
        %td= h(t['test_case_result'])
        %td
          %ul.actions
            %li= test_link(t)

- if @report.new_successes.size > 0
  = tests_header('new_successes', pluralize(@report.new_successes.size, 'New Successes'))
  %table#new_successes.list
    %tr
      %th Build Configuration
      %th Test Configuration
      %th Group
      %th Test
      %th Operations
    - @report.new_successes.each do |t|
      %tr
        %td= h(t['build_configuration_name'])
        %td= h(t['test_configuration_name'])
        %td= h(t['group_name'])
        %td= h(t['test_case_name'])
        %td
          %ul.actions
            %li= test_link(t)

- if @report.intermittent_failures.size > 0
  = tests_header('intermittent_failures', pluralize(@report.intermittent_failures.size, 'Intermittent Failures'))
  %table#intermittent_failures.list
    %tr
      %th Build Configuration
      %th Test Configuration
      %th Group
      %th Test
      %th Result
      %th Operations
    - @report.intermittent_failures.each do |t|
      %tr
        %td= h(t['build_configuration_name'])
        %td= h(t['test_configuration_name'])
        %td= h(t['group_name'])
        %td= h(t['test_case_name'])
        %td= h(t['test_case_result'])
        %td
          %ul.actions
            %li= test_link(t)
  %script{ :type => 'text/javascript' }
    = hide_tests_javascript('intermittent_failures');

- if @report.consistent_failures.size > 0
  = tests_header('consistent_failures', pluralize(@report.consistent_failures.size, 'Consistent Failures'))
  %table#consistent_failures.list
    %tr
      %th Build Configuration
      %th Test Configuration
      %th Group
      %th Test
      %th Result
      %th Operations
    - @report.consistent_failures.each do |t|
      %tr
        %td= h(t['build_configuration_name'])
        %td= h(t['test_configuration_name'])
        %td= h(t['group_name'])
        %td= h(t['test_case_name'])
        %td= h(t['test_case_result'])
        %td
          %ul.actions
            %li= test_link(t)
  %script{ :type => 'text/javascript' }
    = hide_tests_javascript('consistent_failures');

- if @report.test_runs.size > 1
  %h2 Revisions Covered By Report
  %p
    = ((@report.test_runs[1].revision)..(@report.test_runs[0].revision)).collect {|r| revision_link_for_url(scm_url, r)}.join(', ')

%h2 Test Runs Covered By Report
%table.list
  %tr
    %th Name
    %th Revision
    %th Time
    %th Operations
  - @report.test_runs.each do |t|
    %tr
      %td= h(t.label)
      %td= revision_link_for_url(scm_url, t.revision)
      %td= t.occurred_at
      %td
        %ul.actions
          %li= link_for(t, :label => "Show Summary", :action => 'show_summary')

- if @report.perf_stats.size > 0 or @report.test_runs.size > 1
  %h2 Performance Statistics
  %table.report
    %tr
      %th.pivot
      - @report.perf_stat_headers.each_with_index do |c, i|
        - next if i == 0
        %th.column= c
    - @report.perf_stats.each_with_index do |r,r_index|
      %tr
        %th.row= h(r[0])
        - 1.upto(r.size - 1) do |c_index|
          %td= h(r[c_index])

- results = @report.build_configuration_name_by_test_run
%h2 Build Configuration By Test Run
%table.report
  %tr
    %th.pivot
    - results.column_headers.each do |c|
      %th.column
        - test_run = @report.test_runs.detect {|tr| tr.id.to_s == c.to_s}
        = test_run.label
  - results.row_headers.each_with_index do |r,r_index|
    %tr
      %th.row= h(results.row.label_for(r))
      - 0.upto(results.column_headers.size - 1) do |c_index|
        = cell(results.tabular_data[r_index][c_index].to_i)

- if @report.tcn_by_tr.size > 0
  %h2 Test Case By Test Run
  %table.report
    %tr
      %th.pivot
      - @report.tcn_by_tr_headers.each_with_index do |c, i|
        - next if i == 0
        %th.column= c
    - @report.tcn_by_tr.each_with_index do |r,r_index|
      %tr
        %th.row= h(r[0])
        - 1.upto(r.size - 2) do |c_index|
          = cell(r[c_index].to_i)
