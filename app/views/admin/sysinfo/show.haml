- @page_title = "System Info"
.sysinfo
  %h2 Environment Info
  %table
    %tr
      %th System Time
      %td= Time.now
    %tr
      %th Application Directory
      %td= File.expand_path(RAILS_ROOT)
    %tr
      %th Application Environment
      %td= RAILS_ENV
    %tr
      %th Ruby Version
      %td= ::RUBY_VERSION
    %tr
      %th Ruby Platform
      %td= RUBY_PLATFORM
    %tr
      %th Ruby Release Date
      %td= RUBY_RELEASE_DATE
  %h2 Database Info
  %table
    %tr
      %th Database Schema Version
      %td= DbVersion.db_version
    %tr
      %th Database Environment
      %td= SystemSetting['environment']
    - config = ActiveRecord::Base.configurations[RAILS_ENV]
    %tr
      %th Database Adapter
      %td= config['adapter']
    - config.each_pair do |k,v|
      - if ('password' != k and 'adapter' != k)
        %tr
          %th
            Database
            = k.capitalize
          %td= v
  %h2 Session Info
  %table
    %tr
      %th Session Count
      %td= CGI::Session::ActiveRecordStore::Session.count
      %td.operations= link_to('Purge Stale', :action => 'purge_stale_sessions')
    %tr
      %th Session Timeout
      %td
        = SystemSetting['session.timeout'].to_i
        mins
      %td.operations
  %h2 Application Settings
  %table
    %tr
      %th Results Directory
      %td= SystemSetting['results.dir']
    %tr
      %th SCM Revision URL
      %td= SystemSetting['scm.url']
  %h2 Historic Report Data
  %table
    %tr
      %th Result Facts
      %td= Olap::ResultFact.count(:conditions => 'source_id IS NULL')
      %td.operations= link_to('Purge', :action => 'purge_historic_result_facts')
    %tr
      %th Statistic Facts
      %td= Olap::StatisticFact.count(:conditions => 'source_id IS NULL')
      %td.operations= link_to('Purge', :action => 'purge_historic_statistic_facts')
    %tr
      %th Orphan Dimensions
      %td
        %ul
          - @orhpan_dimensions.each do |d|
            %li= "#{d[0]}: #{d[1]}"
      %td.operations= link_to('Purge', :action => 'purge_orphan_dimensions')
